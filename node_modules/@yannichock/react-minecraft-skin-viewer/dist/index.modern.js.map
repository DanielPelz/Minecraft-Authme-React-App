{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["let React: any\nlet SkinViewer: any\nimport('react').then((DReact) => {\n  React = DReact\n})\n\nimport('skinview3d').then((DSkinViewer) => {\n  SkinViewer = DSkinViewer\n})\n\nconst defaultProps = {\n  walk: false,\n  control: true,\n  rotate: false\n}\n\ntype MinecraftSkinViewerProps = {\n  skin: string\n  width: number\n  height: number\n  walk: boolean\n  rotate: boolean\n  control: boolean\n  zoom: boolean\n  background: String\n} & typeof defaultProps\n\nexport const MinecraftSkinViewer = ({\n  skin,\n  width,\n  height,\n  walk,\n  rotate,\n  control,\n  zoom,\n  background\n}: MinecraftSkinViewerProps) => {\n  // @ts-ignore\n  const canvas = React.useRef<HTMLCanvasElement>(null)\n\n  React.useLayoutEffect(() => {\n    // @ts-ignore\n    const skinViewer = new SkinViewer({\n      skin,\n      width,\n      height,\n      canvas: canvas.current as HTMLCanvasElement\n    })\n\n    // View control\n    let viewerControl: any\n\n    if (background === 'transparent') {\n      skinViewer.renderer.setClearColor(0xffffff, 0)\n    } else {\n      // @ts-ignore\n      skinViewer.background = background\n    }\n\n    if (control) {\n      // @ts-ignore\n      viewerControl = createOrbitControls(skinViewer)\n      viewerControl.enablePan = false\n      viewerControl.enableZoom = zoom\n      viewerControl.enableRotate = true\n    }\n\n    // Animations\n    if (walk) {\n      // @ts-ignore\n      skinViewer.animations.add(WalkingAnimation)\n    }\n    if (rotate) {\n      // @ts-ignore\n      skinViewer.animations.add(RotatingAnimation)\n    }\n    // const rotate = skinViewer.animations.add(skinview3d.RotatingAnimation);\n    // const run = skinViewer.animations.add(skinview3d.RunningAnimation);\n    // Set the speed of an animation\n    // run.speed = 3;\n    // Pause single animation\n    // run.paused = true;\n    // Pause all animations!\n    // skinViewer.animations.paused = true;\n\n    return () => {\n      if (control) {\n        viewerControl.dispose()\n      }\n\n      skinViewer.dispose()\n    }\n  }, [skin, width, height, control, walk, background])\n\n  return <canvas ref={canvas} />\n}\n\nMinecraftSkinViewer.defaultProps = defaultProps\n"],"names":["React","SkinViewer","then","DReact","DSkinViewer","defaultProps","walk","control","rotate","MinecraftSkinViewer","skin","width","height","zoom","background","canvas","useRef","useLayoutEffect","skinViewer","current","viewerControl","renderer","setClearColor","createOrbitControls","enablePan","enableZoom","enableRotate","animations","add","WalkingAnimation","RotatingAnimation","dispose","ref"],"mappings":"AAAA,IAAIA,KAAJ;AACA,IAAIC,UAAJ;AACA,OAAO,OAAP,EAAgBC,IAAhB,CAAqB,UAACC,MAAD;AACnBH,EAAAA,KAAK,GAAGG,MAAR;AACD,CAFD;AAIA,OAAO,YAAP,EAAqBD,IAArB,CAA0B,UAACE,WAAD;AACxBH,EAAAA,UAAU,GAAGG,WAAb;AACD,CAFD;AAIA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,MAAM,EAAE;AAHW,CAArB;IAiBaC,mBAAmB,GAAG,SAAtBA,mBAAsB;MACjCC,YAAAA;MACAC,aAAAA;MACAC,cAAAA;MACAN,YAAAA;MACAE,cAAAA;MACAD,eAAAA;MACAM,YAAAA;MACAC,kBAAAA;AAGA,MAAMC,MAAM,GAAGf,KAAK,CAACgB,MAAN,CAAgC,IAAhC,CAAf;AAEAhB,EAAAA,KAAK,CAACiB,eAAN,CAAsB;AAEpB,QAAMC,UAAU,GAAG,IAAIjB,UAAJ,CAAe;AAChCS,MAAAA,IAAI,EAAJA,IADgC;AAEhCC,MAAAA,KAAK,EAALA,KAFgC;AAGhCC,MAAAA,MAAM,EAANA,MAHgC;AAIhCG,MAAAA,MAAM,EAAEA,MAAM,CAACI;AAJiB,KAAf,CAAnB;AAQA,QAAIC,aAAJ;;AAEA,QAAIN,UAAU,KAAK,aAAnB,EAAkC;AAChCI,MAAAA,UAAU,CAACG,QAAX,CAAoBC,aAApB,CAAkC,QAAlC,EAA4C,CAA5C;AACD,KAFD,MAEO;AAELJ,MAAAA,UAAU,CAACJ,UAAX,GAAwBA,UAAxB;AACD;;AAED,QAAIP,OAAJ,EAAa;AAEXa,MAAAA,aAAa,GAAGG,mBAAmB,CAACL,UAAD,CAAnC;AACAE,MAAAA,aAAa,CAACI,SAAd,GAA0B,KAA1B;AACAJ,MAAAA,aAAa,CAACK,UAAd,GAA2BZ,IAA3B;AACAO,MAAAA,aAAa,CAACM,YAAd,GAA6B,IAA7B;AACD;;AAGD,QAAIpB,IAAJ,EAAU;AAERY,MAAAA,UAAU,CAACS,UAAX,CAAsBC,GAAtB,CAA0BC,gBAA1B;AACD;;AACD,QAAIrB,MAAJ,EAAY;AAEVU,MAAAA,UAAU,CAACS,UAAX,CAAsBC,GAAtB,CAA0BE,iBAA1B;AACD;;AAUD,WAAO;AACL,UAAIvB,OAAJ,EAAa;AACXa,QAAAA,aAAa,CAACW,OAAd;AACD;;AAEDb,MAAAA,UAAU,CAACa,OAAX;AACD,KAND;AAOD,GApDD,EAoDG,CAACrB,IAAD,EAAOC,KAAP,EAAcC,MAAd,EAAsBL,OAAtB,EAA+BD,IAA/B,EAAqCQ,UAArC,CApDH;AAsDA,SAAOd,mBAAA,SAAA;AAAQgC,IAAAA,GAAG,EAAEjB;GAAb,CAAP;AACD;AAEDN,mBAAmB,CAACJ,YAApB,GAAmCA,YAAnC;;;;"}